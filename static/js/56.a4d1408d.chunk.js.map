{"version":3,"file":"static/js/56.a4d1408d.chunk.js","mappings":"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","sources":["components/ContactItem/ContactsItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","components/FilterForm/FilterForm.styled.js","components/FilterForm/FilterForm.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","pages/ContactsPage.jsx","redux/selectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  align-self: stretch;\n  justify-content: space-between;\n  padding: ${p => p.theme.space[3]}px ${p => p.theme.space[3]}px;\n  min-width: 250px;\n  min-height: 50px;\n  gap: 4px;\n\n  background-color: ${p => p.theme.colors.primary};\n  border: 1px solid ${p => p.theme.colors.primary};\n  border-radius: ${p => p.theme.radii.normal};\n  box-shadow: ${p => p.theme.shadows.first};\n`;\n\nexport const ContactName = styled.span`\n  display: inline-block;\n  color: ${p => p.theme.colors.text};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  min-width: 75px;\n`;\n\nexport const ContactPhone = styled.span`\n  display: inline-block;\n  color: ${p => p.theme.colors.text};\n  min-width: 75px;\n`;\n\nexport const IconButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 40px;\n  height: 40px;\n  background-color: ${p => p.theme.colors.primary};\n  border-radius: ${p => p.theme.radii.round};\n  border: 2px solid ${p => p.theme.colors.secondary};\n\n  color: ${p => p.theme.colors.secondary};\n  cursor: pointer;\n  transition: border-color 250ms ease-out, color 250ms ease-out;\n\n  :hover,\n  :focus {\n    border-color: ${p => p.theme.colors.background};\n    color: ${p => p.theme.colors.background};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { FaRegTrashAlt } from 'react-icons/fa';\nimport { useDispatch } from 'react-redux';\n\nimport { deleteContact } from 'redux/operations';\n\nimport {\n  ContactName,\n  ContactPhone,\n  IconButton,\n  Wrapper,\n} from './ContactsItem.styled';\n\nexport const ContactItem = ({ contact: { id, name, phone } }) => {\n  const dispatch = useDispatch();\n\n  const deleteHandler = () => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <Wrapper>\n      <ContactName>{name}:</ContactName>\n      <ContactPhone>{phone}</ContactPhone>\n      <IconButton type=\"button\" aria-label=\"delete\" onClick={deleteHandler}>\n        <FaRegTrashAlt size={25} />\n      </IconButton>\n    </Wrapper>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  gap: ${p => p.theme.space[3]}px;\n`;\n\nexport const ListItem = styled.li`\n  flex-basis: 100%;\n\n  @media (min-width: 768px) {\n    flex-basis: calc(100% / 2 - ${p => p.theme.space[3]}px);\n  }\n\n  @media (min-width: 1200px) {\n    flex-basis: calc(100% / 3 - ${p => p.theme.space[3]}px);\n  }\n`;\n","import { ContactItem } from 'components/ContactItem/ContactItem';\nimport { useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from 'redux/selectors';\nimport { List, ListItem } from './ContactsList.styled';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filterValue = useSelector(selectFilter);\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filterValue.toLowerCase())\n  );\n\n  return (\n    <List>\n      {filteredContacts.map(item => (\n        <ListItem key={item.id}>\n          <ContactItem contact={item} />\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  position: relative;\n  width: 250px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  max-width: 300px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: ${props => props.theme.space[4]}px;\n  text-align: center;\n\n  @media (min-width: 768px) {\n    width: 300px;\n  }\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  height: 45px;\n  padding: ${props => props.theme.space[2]}px;\n\n  font-size: ${props => props.theme.fontSizes.l}px;\n  background-color: ${props => props.theme.colors.background};\n  color: ${props => props.theme.colors.primaryText};\n  border: 1px solid ${props => props.theme.colors.text};\n  border-radius: ${props => props.theme.radii.normal};\n\n  transition: all 250ms ease-out;\n\n  :valid,\n  :focus {\n    border: 1px solid ${props => props.theme.colors.secondary};\n    outline-color: ${p => p.theme.colors.secondary};\n  }\n\n  :valid ~ span,\n  :focus ~ span {\n    padding: 0 ${props => props.theme.space[2]}px;\n    font-size: ${props => props.theme.fontSizes.s}px;\n    font-weight: ${props => props.theme.fontWeights.bold};\n    color: ${props => props.theme.colors.secondary};\n    letter-spacing: 0.2em;\n    text-transform: uppercase;\n    background-color: ${props => props.theme.colors.background};\n    border-left: 1px solid ${props => props.theme.colors.secondary};\n    border-right: 1px solid ${props => props.theme.colors.secondary};\n    transform: translateX(20px) translateY(-23px);\n  }\n`;\n\nexport const Placeholder = styled.span`\n  position: absolute;\n  left: 0;\n  padding: ${props => props.theme.space[2]}px;\n  pointer-events: none;\n  /* text-transform: uppercase; */\n  font-size: ${props => props.theme.fontSizes.l}px;\n  color: ${props => props.theme.colors.primary};\n  transition: all 250ms ease-out;\n`;\n","import { nanoid } from '@reduxjs/toolkit';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterContacts } from 'redux/filterSlice';\nimport { selectFilter } from 'redux/selectors';\nimport { Input, Placeholder, Wrapper } from './FilterForm.styled';\n\nexport const FilterForm = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const inputHandler = event => {\n    const form = event.target;\n    dispatch(filterContacts(form.value));\n  };\n\n  const filterId = nanoid();\n\n  return (\n    <Wrapper>\n      <Input\n        id={filterId}\n        type=\"text\"\n        name=\"filter\"\n        required=\"required\"\n        onChange={inputHandler}\n        value={filter}\n      />\n      <Placeholder>Contact name</Placeholder>\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import { TailSpin } from 'react-loader-spinner';\nimport { Wrapper } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <Wrapper>\n      <TailSpin\n        color=\"#515e69\"\n        ariaLabel=\"tail-spin-loading\"\n        radius=\"1\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n      />\n    </Wrapper>\n  );\n};\n","import { ContactList } from 'components/ContactsList/ContactsList';\nimport { FilterForm } from 'components/FilterForm/FilterForm';\nimport { Loader } from 'components/Loader/Loader';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/operations';\nimport { selectContacts, selectError, selectIsLoading } from 'redux/selectors';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const items = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <main>\n      <FilterForm />\n      {items.length === 0 && isLoading && <Loader />}\n      {items.length === 0 && !isLoading && !error && (\n        <div>There is no contacts yet</div>\n      )}\n      {items.length > 0 && <ContactList />}\n      {error && <div>{error}</div>}\n    </main>\n  );\n};\n\nexport default Contacts;\n","export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n"],"names":["Wrapper","styled","p","theme","space","colors","primary","radii","normal","shadows","first","ContactName","text","fontWeights","bold","ContactPhone","IconButton","round","secondary","background","ContactItem","contact","id","name","phone","dispatch","useDispatch","type","onClick","deleteContact","size","List","ListItem","ContactList","contacts","useSelector","selectContacts","filterValue","selectFilter","filteredContacts","filter","toLowerCase","includes","map","item","props","Input","fontSizes","l","primaryText","s","Placeholder","FilterForm","filterId","nanoid","required","onChange","event","form","target","filterContacts","value","Loader","color","ariaLabel","radius","wrapperStyle","wrapperClass","visible","items","isLoading","selectIsLoading","error","selectError","useEffect","fetchContacts","length","state"],"sourceRoot":""}