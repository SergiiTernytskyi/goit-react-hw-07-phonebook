{"version":3,"file":"static/js/214.6bcab0b5.chunk.js","mappings":"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","sources":["components/ContactsForm/ContactsForm.styled.js","components/ContactsForm/ContactsForm.jsx","pages/CreateContact.jsx","redux/selectors.js"],"sourcesContent":["import { Field, Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  max-width: 600px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: ${p => p.theme.space[3]}px;\n  margin-bottom: ${p => p.theme.space[4]}px;\n`;\n\nexport const Label = styled.label`\n  min-width: 250px;\n  flex-basis: calc(100% / 2 - ${p => p.theme.space[3]}px);\n\n  font-size: ${p => p.theme.fontSizes.l}px;\n  font-weight: ${p => p.theme.fontWeights.bold};\n  line-height: ${p => p.theme.lineHeights.heading};\n\n  color: ${p => p.theme.colors.secondary};\n  text-transform: uppercase;\n`;\n\nexport const Input = styled(Field)`\n  padding: ${p => p.theme.space[2]}px;\n  width: 100%;\n\n  font-size: ${p => p.theme.fontSizes.l}px;\n\n  background-color: transparent;\n  color: ${p => p.theme.colors.secondary};\n  border: 1px solid ${p => p.theme.colors.text};\n  border-radius: ${p => p.theme.radii.normal};\n\n  :hover,\n  :focus {\n    border: 1px solid ${p => p.theme.colors.secondary};\n    outline-color: ${p => p.theme.colors.secondary};\n  }\n`;\n\nexport const AddButton = styled.button`\n  align-self: center;\n  width: 150px;\n  height: 50px;\n  margin-bottom: ${p => p.theme.space[4]}px;\n\n  font-size: ${p => p.theme.fontSizes.l}px;\n  font-weight: ${p => p.theme.fontWeights.bold};\n  text-transform: capitalize;\n\n  color: ${p => p.theme.colors.primary};\n  background-color: ${p => p.theme.colors.text};\n  border: transparent;\n  border-radius: ${p => p.theme.radii.normal};\n  box-shadow: ${p => p.theme.shadows.first};\n\n  cursor: pointer;\n  transition: all 250ms ease-out;\n\n  :hover {\n    color: ${p => p.theme.colors.white};\n    background-color: ${p => p.theme.colors.secondary};\n  }\n`;\n\nexport const Error = styled.div`\n  width: 100%;\n\n  :not(:last-child) {\n    margin-bottom: ${p => p.theme.space[3]}px;\n  }\n\n  text-align: center;\n  color: ${p => p.theme.colors.accent};\n  font-size: ${p => p.theme.fontSizes.l}px;\n  font-weight: ${p => p.theme.fontWeights.bold};\n`;\n","import { Formik, ErrorMessage } from 'formik';\nimport toast from 'react-hot-toast';\nimport { nanoid } from '@reduxjs/toolkit';\nimport * as yup from 'yup';\nimport 'yup-phone';\nimport {\n  AddButton,\n  Error,\n  Input,\n  Label,\n  StyledForm,\n  Wrapper,\n} from './ContactsForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/operations';\nimport { selectContacts } from 'redux/selectors';\nimport { useNavigate } from 'react-router-dom';\n\nconst contactsSchema = yup.object().shape({\n  name: yup\n    .string()\n    .typeError(\"That doesn't look like a contact name\")\n    .trim()\n    .required('Contact name is required'),\n  phone: yup\n    .string()\n    .phone(\n      'UA',\n      true,\n      'Number must be a valid phone number (+380 XX XXX XX XX)'\n    )\n    .required('Contact phone number is required'),\n});\n\nconst initialValues = { name: '', phone: '' };\n\nexport const ContactsForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const navigate = useNavigate();\n\n  const submitHandler = ({ name, phone }, { resetForm }) => {\n    const normilizedContacts = {\n      name: name.trim(),\n      phone,\n    };\n\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase().trim()\n      )\n    ) {\n      return toast.error(`${name} is already in your contacts`);\n    }\n\n    dispatch(addContact(normilizedContacts));\n    resetForm();\n    navigate('/contacts');\n  };\n\n  const nameId = nanoid();\n  const phoneId = nanoid();\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={submitHandler}\n        validationSchema={contactsSchema}\n      >\n        <StyledForm autoComplete=\"off\">\n          <Wrapper>\n            <Label htmlFor={nameId}>\n              Contact name\n              <Input\n                id={nameId}\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Enter name\"\n              />\n            </Label>\n\n            <Label htmlFor={phoneId}>\n              Phone number\n              <Input\n                id={phoneId}\n                type=\"tel\"\n                name=\"phone\"\n                placeholder=\"Enter phone number\"\n              />\n            </Label>\n          </Wrapper>\n          <AddButton type=\"submit\">Add contact</AddButton>\n          <ErrorMessage component={Error} name=\"name\" />\n          <ErrorMessage component={Error} name=\"phone\" />\n        </StyledForm>\n      </Formik>\n    </>\n  );\n};\n","import { ContactsForm } from 'components/ContactsForm/ContactsForm';\n\nconst CreateContact = () => {\n  return (\n    <main>\n      <ContactsForm />\n    </main>\n  );\n};\nexport default CreateContact;\n","export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n"],"names":["StyledForm","styled","Form","Wrapper","p","theme","space","Label","fontSizes","l","fontWeights","bold","lineHeights","heading","colors","secondary","Input","Field","text","radii","normal","AddButton","primary","shadows","first","white","Error","accent","contactsSchema","yup","shape","name","typeError","trim","required","phone","initialValues","ContactsForm","dispatch","useDispatch","contacts","useSelector","selectContacts","navigate","useNavigate","nameId","nanoid","phoneId","onSubmit","resetForm","normilizedContacts","find","contact","toLowerCase","toast","addContact","validationSchema","autoComplete","htmlFor","id","type","placeholder","component","state","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter"],"sourceRoot":""}